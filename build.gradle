task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}

buildscript {
	ext {
		kotlinVersion = '1.1.61'
        kotlinLoggingVersion = '1.4.6'
		springBootVersion = '1.5.9.RELEASE'
        swaggerVersion = '2.7.0'
        jacksonVersion = '2.9.2'
        caffeineVersion = '2.6.0'
        mockitoVersion = '2.8.47'
        mockitoKotlinVersion = '1.5.0'
        kluentVersion = '1.26'

	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
    jcenter()
}


dependencies {
	// kotlin
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
	compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    // logging
    compile "io.github.microutils:kotlin-logging:$kotlinLoggingVersion"

    // jackson json
    //compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-modules-java8:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"

	// spring
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	//compile('org.springframework.boot:spring-boot-starter-mustache')
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-web'
	//compileOnly('org.springframework.boot:spring-boot-config-processor')

    // swagger
    compile "io.springfox:springfox-swagger2:$swaggerVersion"
    compile "io.springfox:springfox-swagger-ui:$swaggerVersion"

    // caffeine cache
    compile "com.github.ben-manes.caffeine:caffeine:$caffeineVersion"


	// test: spring
	testCompile 'org.springframework.boot:spring-boot-starter-test', {
        exclude group: "org.mockito", module: "mockito-core"
    }
	testCompile 'org.springframework.security:spring-security-test'
    // test: mockito, kluent
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.mockito:mockito-inline:$mockitoVersion"
    testCompile "org.amshove.kluent:kluent:$kluentVersion", {
        exclude group: "com.nhaarman", module: "mockito-kotlin"
    }
    testCompile "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
}
